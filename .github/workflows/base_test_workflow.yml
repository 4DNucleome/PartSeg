on:
  workflow_call:
    inputs:
      python_version:
        required: true
        type: string
      os:
        required: true
        type: string
      tox_args:
        required: false
        type: string
        default: ""
      napari:
        required: false
        type: string
        default: >-
          ["None"]
      platform:
        required: false
        type: string
        default: >-
          ["PyQt5", "PySide2"]
      test_data:
        required: false
        type: boolean
        default: False


jobs:
  test:
    name: ${{ matrix.os }} py ${{ matrix.python_version }} ${{ matrix.napari }} ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{fromJson(inputs.os)}}
        python_version: ${{fromJson(inputs.python_version)}}
        napari_version: ${{fromJson(inputs.napari)}}
        platform: ${{fromJson(inputs.platform)}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        name: Install Python ${{ matrix.python_version }}
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install ubuntu libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0

      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      - name: Download test data
        if: ${{ inputs.test_data }}
        uses: actions/download-artifact@v3
        with:
          name: test_data
          path: test_data
      - name: List files
        shell: bash
        run: ls -l

      - name: Install dependencies
        run: |
          python -m pip install -r requirements/requirements_dev.txt tox-gh-actions

      - name: Test with tox
        # run tests using pip install --pre
        uses: GabrielBB/xvfb-action@v1
        timeout-minutes: 60
        with:
          run: python -m tox ${{ inputs.tox_args }}
        env:
          PYVISTA_OFF_SCREEN: True  # required for opengl on windows
          NAPARI: ${{ matrix.napari_version }}
          PLATFORM: ${{ matrix.platform }}
