on:
  workflow_call:
    inputs:
      python_version:
        required: true
        type: string
      os:
        required: false
        type: string
        default: "ubuntu-20.04"
      tox_args:
        required: false
        type: string
        default: ""
      napari:
        required: false
        type: string
        default: "latest"
      qt_backend:
        required: false
        type: string
        default: "PyQt5"
      test_data:
        required: false
        type: boolean
        default: False
      coverage:
        required: false
        type: boolean
        default: False
      timeout:
        required: false
        type: number
        default: 60


jobs:
  test:
    name: ${{ inputs.os }} py ${{ inputs.python_version }} ${{ inputs.napari }} ${{ inputs.qt_backend }}
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python ${{ inputs.python_version }}
        with:
          python-version: ${{ inputs.python_version }}
          cache: 'pip'
          cache-dependency-path: 'setup.cfg'

#      - name: Install ubuntu libraries
#        if: runner.os == 'Linux'
#        run: |
#          sudo apt update
#          sudo apt-get install -y libegl1 libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 x11-utils libxcb-cursor0

      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: runner.os == 'Linux'
        with:
          packages: libegl1 libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 x11-utils libxcb-cursor0 libhdf5-dev
          version: 1.0


      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 git://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      - name: Download test data
        if: ${{ inputs.test_data }}
        uses: actions/download-artifact@v3
        with:
          name: test_data
          path: test_data

      - name: Install dependencies
        run: |
          python -m pip install -r requirements/requirements_dev.txt tox-gh-actions>=2.12.0 tox-min-req
          pip list

      - name: Test with tox
        uses: aganders3/headless-gui@v1
        timeout-minutes: ${{ inputs.timeout }}
        with:
          run: python -m tox ${{ inputs.tox_args }}
        env:
          PYVISTA_OFF_SCREEN: True  # required for opengl on windows
          NAPARI: ${{ inputs.napari }}
          BACKEND: ${{ inputs.qt_backend }}
          PIP_CONSTRAINT: requirements/constraints_py${{ inputs.python_version }}.txt

      - uses: actions/upload-artifact@v3
        with:
          name: upload pytest timing reports as json
          path: |
            ./report-*.json
          retention-days: 7

      - uses: actions/upload-artifact@v3
        if: ${{ inputs.coverage }}
        with:
          name: coverage_report ${{ inputs.tox_args }}
          path: |
            ./htmlcov
          retention-days: 7

      - uses: codecov/codecov-action@v3
        if: ${{ inputs.coverage }}
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
