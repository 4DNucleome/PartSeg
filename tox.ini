# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py{37,38,39, 310}-{PyQt5, PySide2}-all, py{37,38,39}-PyQt5-napari-{410,411,412,413,414,415,repo}
toxworkdir=/tmp/tox

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310


[gh-actions:env]
NAPARI =
    None: all
    napari410: 410
    napari411: 411
    napari412: 412
    napari413: 413
    napari414: 414
    napari415: 415
    repo: repo

[base]
deps =
    # pytest-xvfb ; sys_platform == 'linux'
    PyQt5: PyQt5!=5.15.0
    PySide2: PySide2!=5.15.0
    PySide2: npe2!=0.2.2

[testenv]
# passenv = DISPLAY XAUTHORITY
recreate=true
passenv =
    CI
    GITHUB_ACTIONS
    AZURE_PIPELINES
    DISPLAY XAUTHORITY
    NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
    PYVISTA_OFF_SCREEN
deps =
    {[base]deps}
extras =
    test

commands =
    python -m pytest package/tests --no-cov

[testenv:py310-{PyQt5, PySide2}-all]
deps =
    SimpleITK@https://github.com/SimpleITK/SimpleITK/releases/download/v2.2rc2/SimpleITK-2.2.0rc2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
    {[testenv]deps}

[testenv:py{37,38,39}-PyQt5-napari-{410,411,412,413,414,415,repo}]
deps =
    {[base]deps}
    410: napari==0.4.10
    411: napari==0.4.11
    412: napari==0.4.12
    413: napari==0.4.13
    414: napari==0.4.14
    415: napari==0.4.15
    repo: git+https://github.com/napari/napari.git
commands =
    !repo: python -m pytest package/tests/test_PartSeg/test_napari_widgets.py  --no-cov
    repo: python -m pytest --no-cov

[testenv:py{37,38,39}-PyQt5-coverage]
deps =
    {[testenv]deps}
commands =
    python -m pytest --cov-report=xml --cov-report html --cov-append --cov {envsitepackagesdir}/PartSeg --cov {envsitepackagesdir}/PartSegCore --cov {envsitepackagesdir}/PartSegImage
    codecov

[testenv:py37-PyQt5-minimal]
deps =
    -rbuild_utils/minimal-req.txt
    setuptools_scm[toml]>=3.4
commands_pre =
    python build_utils/create_minimal_req.py


[testenv:py{37,38,39}-{PyQt5, PySide2}-azure]
deps =
    pytest-azurepipelines
    {[testenv]deps}


[testenv:jupyter]
deps =
    {[testenv]deps}
    -rrequirements/requirements_pyinstaller.txt
    jupyter[all]
    matplotlib
setenv =
    DATA_PATH = {toxinidir}/typy_neuronow2
commands =
    jupyter nbconvert --to notebook --execute tutorials/tutorial_neuron_types/Neuron_types_example.ipynb

[testenv:docs]
deps =
    {[testenv]deps}
    -rrequirements/requirements_pyinstaller.txt
    -rdocs/requirements.txt
allowlist_externals =
    make
    tar
commands =
    make -C docs html
    tar -C docs/_build -czf docs.tar.gz html
