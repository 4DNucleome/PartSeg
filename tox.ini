# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = py{38,39,310}-{PyQt5, PySide2}-all, py{38,39,310}-{PyQt5,PySide2}-napari_{414,415,416,417,repo}
toxworkdir=/tmp/tox

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
fail_on_no_env = True

[gh-actions:env]
NAPARI =
    latest: all
    napari414: 414
    napari415: 415
    napari416: 416
    napari417: 417
    repo: repo
BACKEND =
    pyqt: PyQt5
    pyside: PySide2
    PyQt5: PyQt5
    PySide2: PySide2

[base]
deps =
    # pytest-xvfb ; sys_platform == 'linux'
    PyQt5: PyQt5!=5.15.0
    PySide2: PySide2!=5.15.0
    PySide2: npe2!=0.2.2
    imageio != 2.22.1

[testenv]
# passenv = DISPLAY XAUTHORITY
recreate=true
passenv =
    QT_API
    CI
    GITHUB_ACTIONS
    AZURE_PIPELINES
    DISPLAY
    XAUTHORITY
    NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
    PYVISTA_OFF_SCREEN
deps =
    {[base]deps}
extras =
    test

commands =
    python -m pytest package/tests --no-cov

[testenv:py39-PySide2-conda]
conda_env=environment.yml
deps=
    pytest

[testenv:py{38,39,310}-{PyQt5,PySide2}-napari_{414,415,416,417,repo}]
deps =
    {[base]deps}
    414: napari==0.4.14
    415: napari==0.4.15
    416: napari==0.4.16
    417: napari==0.4.17
    repo: git+https://github.com/napari/napari.git
commands =
    !repo: python -m pytest -v package/tests/test_PartSeg/test_napari_widgets.py  --no-cov
    repo: python -m pytest --no-cov .

[testenv:py{38,39,310}-PyQt5-coverage]
deps =
    {[testenv]deps}
commands =
    python -m pytest --cov-report=xml --cov-report html --cov-append --cov {envsitepackagesdir}/PartSeg --cov {envsitepackagesdir}/PartSegCore --cov {envsitepackagesdir}/PartSegImage --cov package/tests
    codecov

[testenv:py38-PyQt5-minimal]
deps =
    -rbuild_utils/minimal-req.txt
    setuptools_scm[toml]>=3.4
    npe2==0.1.1
commands_pre =
    python build_utils/create_minimal_req.py


[testenv:py{37,38,39}-{PyQt5, PySide2}-azure]
deps =
    pytest-azurepipelines
    {[testenv]deps}


[testenv:jupyter]
deps =
    {[testenv]deps}
    -rrequirements/requirements_pyinstaller.txt
    jupyter[all]
    matplotlib
setenv =
    DATA_PATH = {toxinidir}/typy_neuronow2
commands =
    jupyter nbconvert --to notebook --execute tutorials/tutorial_neuron_types/Neuron_types_example.ipynb

[testenv:docs]
deps =
    {[testenv]deps}
    -rrequirements/requirements_pyinstaller.txt
allowlist_externals =
    make
    tar
extras =
    docs
commands =
    make -C docs html
    tar -C docs/_build -czf docs.tar.gz html
